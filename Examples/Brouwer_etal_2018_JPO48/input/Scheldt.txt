# Scheldt model for results of Sectoion 4
# This file may be used and adapted. Please refer to the article mentioned below when using information from this input file.
#
# Appears in: Brouwer et al (2018) JPO, 48:1629-1650
# iFlow version: 3.0 (originally for 2.5)
# Original date: Jun 2017
# Update: Feb 2022
# Author: R.L. Brouwer


## Geometry ##
module  hydrodynamics2DV.Geometry2DV
L       160000
B0      type    functions.ExpRationalFunc
 	    C1      -0.02742e-3 1.8973
 	    C2      4.9788e-11 -9.213e-6 1
H0      type    functions.Polynomial
        C		-2.9013e-24 1.4030e-18 -2.4218e-13 1.7490e-8 -5.2141e-4 15.332  #bottom Vlissingen-Gentbrugge 2013

## Method ##
module	    hydrodynamics2DV.RegularGrid
xgrid		equidistant     200
zgrid	    equidistant     50
fgrid		integer         2

xoutputgrid    equidistant     200
zoutputgrid    equidistant     50
foutputgrid    integer         2

## Hydrodynamics ##
module      hydrodynamics2DV.HydroLead hydrodynamics2DV.HydroFirst
submodules  all
A0			0 1.77 0
A1			0 0 0.14
phase0		0 0 0
phase1		0 0 -1.3
Q0			0
Q1          25


## Turbulence ##
module		turbulence2DV.TurbulenceUniform
Av0amp      0.0367
Av0phase    0.
sf0         0.0048
m           1.
n           0.
module      turbulence2DV.DiffusivityUndamped

## Salinity ##
module      salinity2DV.SaltHyperbolicTangent
ssea        30
xc          55.e3
xl          26.e3

## Sediment ##
module      sediment2DV.SedimentCapacity sediment2DV.DynamicAvailability
erosion_formulation Chernetsky
astar       1           # set astar to 1, functionality taken over by csea
finf        1           # set finf to 1, functionality taken over by Mhat
ws0         2.e-3
Kh          100
submodules  erosion sedadv noflux

## Dynamic Availability ##
Mhat        1.e-4
csea        4.e-2
p           0.4
tol         1.e-10
Friver      0.
finit       self.FSEA*(1-self.x/self.L)**20
concept     stock exact  #approximation
theta       1

# EXPERIMENT 1 - CONSTANT DISCHARGE
dt          24*3600.
t           np.arange(0, 366*24*3600, self.dt)
Q           25.*np.ones(len(self.t))

# EXPERIMENT 2 - VARYING DISCHARGE
#dt          24*3600.
#t           np.arange(0, 3*366*self.dt, self.dt)
#Q           np.append(-17.5*np.tanh((self.t-self.dt*600)/2e6)+42.5, 17.5*np.tanh((self.t - self.dt*600)/2e6) + 42.5)

## Output ##
module          general.Output
path	        output
filename        out

requirements    ft St Flux Ft Tt a F T c0bar CM4 B H alpha2
